6.a- Tres robots deben recorrer el perímetro de su cuadrante, como se indica a
continuación:
● El robot 1 comienza la esquina (2,2) y debe realizar un cuadrante de 6x6 juntando
todas las flores que encuentre
● El robot 2 comienza en la esquina (5,5) y debe realizar un cuadrante de 10x10
juntando todas las flores y los papeles que encuentre
● El robot 3 comienza en la esquina (9,9) y debe realizar un cuadrante de 7x7 juntando
todos los papeles que encuentre
Cada robot que finalice su cuadrante deberá avisar al robot fiscalizador. Al recibir el aviso, el
robot fiscalizador indicará inmediatamente una calle a la que deberá dirigirse el robot
recolector, considerando que el robot que finalizó primero irá a la calle 20, el segundo a la
21 y el tercero a la 22.
Cuando los robots recolectores reciben un número de calle, deberán posicionarse en la
avenida 1 de dicha calle, y avanzar a lo largo de la calle depositando en cada esquina un
papel, una flor o ambos, según lo que cada robot haya juntado. El recorrido finalizará al
completar la calle o vaciarse las bolsas.

Puntos donde puede haber colision:
	c1 : 5,8
	c2 : 8,5
	c3 : 9,15
	c4 : 15,9


programa p3ej6
procesos
  proceso asignarCalles (ES primero:numero; ES segundo:numero; ES tercero:numero)
  comenzar
    si (primero = 1)
      EnviarMensaje(20,r1)
    sino
      si(primero = 2)
        EnviarMensaje(20,r2)
      sino
        EnviarMensaje(20,r3)
    si (segundo = 1)
      EnviarMensaje(21,r1)
    sino
      si(segundo =2)
        EnviarMensaje(21,r2)
      sino
        EnviarMensaje(21,r3)
    si (tercero = 1)
      EnviarMensaje(22,r1)
    sino
      si (tercero = 2)
        EnviarMensaje(22,r2)
      sino
        EnviarMensaje(22,r3)
  fin
  proceso cuadranteF
  comenzar
    rectaF(6)
    derecha
    rectaF(2)
    BloquearEsquina(5,8)
    rectaF(2)
    LiberarEsquina(5,8)
    rectaF(2)
    derecha
    rectaF(2)
    BloquearEsquina(8,5)
    rectaF(2)
    LiberarEsquina(8,5)
    rectaF(2)
    derecha
    rectaF(6)
  fin
  proceso cuadranteFP
  comenzar
    rectaFP(2)
    BloquearEsquina(5,8)
    rectaFP(2)
    LiberarEsquina(5,8)
    rectaFP(6)
    derecha
    rectaFP(3)
    BloquearEsquina(9,15)
    rectaFP(2)
    LiberarEsquina(9,15)
    rectaFP(5)
    derecha
    rectaFP(10)
    derecha
    rectaFP(10)
  fin
  proceso cuadranteP
  comenzar
    rectaP(5)
    BloquearEsquina(9,15)
    rectaP(2)
    LiberarEsquina(9,15)
    derecha
    rectaP(7)
    derecha
    rectaP(7)
    derecha
    BloquearEsquina(15,9)
    rectaP(2)
    LiberarEsquina(15,9)
    rectaP(5)
  fin
  proceso rectaF (E cant:numero)
  comenzar
    repetir cant
      recolectarFlores
      mover
  fin
  proceso rectaP (E cant:numero)
  comenzar
    repetir cant
      recolectarPapeles
      mover
  fin
  proceso rectaFP (E cant:numero)
  comenzar
    repetir cant
      recolectarFlores
      recolectarPapeles
      mover
  fin
  proceso asignarIds
  comenzar
    EnviarMensaje(1,r1)
    EnviarMensaje(2,r2)
    EnviarMensaje(3,r3)
  fin
  proceso recolectarFlores
  comenzar
    mientras (HayFlorEnLaEsquina)
      tomarFlor
  fin
  proceso recolectarPapeles
  comenzar
    mientras(HayPapelEnLaEsquina)
      tomarPapel
  fin
areas
  ciudad : AreaC (1,1,100,100)
robots
  robot fiscalizador
  variables
    id:numero
    pri,seg,ter:numero
  comenzar
    asignarIds
    RecibirMensaje(pri,*)
    RecibirMensaje(seg,*)
    RecibirMensaje(ter,*)
    asignarCalles(pri,seg,ter)
  fin
  robot rf
  variables
    id:numero
    ca:numero
  comenzar
    RecibirMensaje(id,fiscal)
    cuadranteF
    derecha
    EnviarMensaje(id,fiscal)
    RecibirMensaje(ca,fiscal)
    Pos(1,ca)
    derecha
    mientras((HayFlorEnLaBolsa) & (PosAv < 100))
      depositarFlor
      mover
    si ((PosAv = 100) & (HayFlorEnLaBolsa))
      mientras(HayFlorEnLaBolsa)
        depositarFlor
  fin
  robot rt
  variables
    id : numero
    ca:numero
  comenzar
    RecibirMensaje(id,fiscal)
    cuadranteFP
    derecha
    EnviarMensaje(id,fiscal)
    RecibirMensaje(ca,fiscal)
    Pos(1,ca)
    derecha
    mientras((HayPapelEnLaBolsa & HayFlorEnLaBolsa) & (PosAv < 100))
      depositarPapel
      depositarFlor
      mover
    si ((PosAv = 100) & (HayPapelEnLaBolsa | HayFlorEnLaBolsa))
      mientras(HayFlorEnLaBolsa)
        depositarFlor
      mientras(HayPapelEnLaBolsa)
        depositarPapel
  fin
  robot rp
  variables
    id:numero
    ca:numero
  comenzar
    RecibirMensaje(id,fiscal)
    cuadranteP
    derecha
    EnviarMensaje(id,fiscal)
    RecibirMensaje(ca,fiscal)
    Pos(1,ca)
    derecha
    mientras((HayPapelEnLaBolsa) & (PosAv < 100))
      depositarPapel
      mover
    si (PosAv = 100) & (HayPapelEnLaBolsa)
      mientras(HayPapelEnLaBolsa)
        depositarPapel
  fin
variables
  fiscal : fiscalizador
  r1 : rf
  r2 : rt
  r3 : rp 
comenzar
  AsignarArea(fiscal,ciudad)
  AsignarArea(r1,ciudad)
  AsignarArea(r2,ciudad)
  AsignarArea(r3,ciudad)
  Iniciar(fiscal,1,1)
  Iniciar(r1,2,2)
  Iniciar(r2,5,5)
  Iniciar(r3,9,9)
fin


6.b Analizar (no es necesario implementar): ¿cómo debería modificarse el ejercicio anterior
si los robots recolectores no conocen de antemano el tamaño de su cuadrante (por ejemplo,
porque lo calcula el fiscalizador de manera aleatoria)?

En mi caso al tener un proceso recta para cada uno, se le enviaria un valor aleatorio
a cada uno para que realicen su cuadrante, lo que se debe cambiar es como calcular los puntos de colicion en base 
a los movimientos que realice

6.c. Modifique el ejercicio anterior (6.a) para que ahora el robot fiscalizador espere a que
todos los robots recolectores hayan completado sus cuadrantes antes de indicarles la calle
que deberán recorrer.

es asi como me funciona ajsdjasdjasjd