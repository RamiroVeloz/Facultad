4- Realice un programa en el que 4 robots mueven de a una todas las flores de la esquina
(10,10) a la esquina (11,11). Para ello, cada robot que toma una flor de la esquina (10,10) la
deposita en la esquina (11,11) y luego retorna a su esquina inicial. Cada robot que finaliza
(o, sea, que detecta que la esquina (10,10) se ha vaciado) deberá avisar al robot
coordinador que ha finalizado. Cuando todos los robots finalizaron, el robot coordinador
deberá informar qué robot finalizó último y a continuación deberá recolectar todas las flores
de la esquina (11,11).
El robot coordinador inicia en la esquina (1,1).
Los robots inician en las esquinas (9,9) (9,10) (9,11) y (9,12).


programa p3ej4
procesos
  proceso recolectarFlor (ES estado:boolean)
  comenzar
    si (HayFlorEnLaEsquina)
      tomarFlor
      estado := V
    sino
      estado := F
  fin
areas
  areaRecoleccion : AreaPC (10,10,10,10)
  areaDeposito : AreaPC (11,11,11,11)
  areaCoordinador : AreaP (1,1,1,1)
  a1: AreaP (9,9,9,9)
  a2: AreaP (9,10,9,10)
  a3: AreaP (9,11,9,11)
  a4: AreaP (9,12,9,12)
robots
  robot coordinador
  variables
    id:numero
    ultimo : numero
  comenzar
    EnviarMensaje(1,r1)
    EnviarMensaje(2,r2)
    EnviarMensaje(3,r3)
    EnviarMensaje(4,r4)
    repetir 4
      RecibirMensaje(id,*)
      si (id =1)
        ultimo := id
      sino  
        si (id =2)
          ultimo := id
        sino
          si (id = 3)
            ultimo := id
          sino
            ultimo := 4
    Informar(ultimo)
    si (ultimo = 1)
      EnviarMensaje(V,r1)
      EnviarMensaje(F,r2)
      EnviarMensaje(F,r3)
      EnviarMensaje(F,r4)
    sino
      si (id = 2)
        EnviarMensaje(F,r1)
        EnviarMensaje(V,r2)
        EnviarMensaje(F,r3)
        EnviarMensaje(F,r4)
      sino
        si (id = 3)
          EnviarMensaje(F,r1)
          EnviarMensaje(F,r2)
          EnviarMensaje(V,r3)
          EnviarMensaje(F,r4)
        sino
          EnviarMensaje(F,r)
          EnviarMensaje(F,r)
          EnviarMensaje(F,r)
          EnviarMensaje(V,r)
  fin
  robot recolector
  variables
    id,ai,ci:numero
    estado : boolean
  comenzar
    RecibirMensaje(id,c)
    ai := PosAv
    ci := PosCa
    estado := V
    mientras (estado)
      BloquearEsquina(10,10)
      Pos(10,10)
      recolectarFlor(estado)
      si (estado)
        BloquearEsquina(11,11)
        Pos(11,11)
        LiberarEsquina(10,10)
        depositarFlor
        Pos(ai,ci)
        LiberarEsquina(11,11)
      sino
        Pos(ai,ci)
        LiberarEsquina(10,10)
    EnviarMensaje(id,c)
    RecibirMensaje(estado,c)
    si (estado = V)
      Pos(11,11)
      mientras(HayFlorEnLaEsquina)
        tomarFlor
  fin
variables
  c:coordinador
  r1,r2,r3,r4: recolector
comenzar
  AsignarArea(c,areaCoordinador)
  AsignarArea(r1,areaRecoleccion)
  AsignarArea(r2,areaRecoleccion)
  AsignarArea(r3,areaRecoleccion)
  AsignarArea(r4,areaRecoleccion)
  AsignarArea(r1,areaDeposito)
  AsignarArea(r2,areaDeposito)
  AsignarArea(r3,areaDeposito)
  AsignarArea(r4,areaDeposito)
  AsignarArea(r1,a1)
  AsignarArea(r2,a2)
  AsignarArea(r3,a3)
  AsignarArea(r4,a4)
  Iniciar(c,1,1)
  Iniciar(r1,9,9)
  Iniciar(r2,9,10)
  Iniciar(r3,9,11)
  Iniciar(r4,9,12)
fin


b- Implemente una variante en la cual los robots luego de tomar cada flor de la esquina
(10,10) vuelvan a su esquina inicial, pasen a la esquina (11,11) a depositarla y finalmente
vuelvan a la esquina inicial.

programa p3ej4
procesos
  proceso recolectarFlor (ES estado:boolean)
  comenzar
    si (HayFlorEnLaEsquina)
      tomarFlor
      estado := V
    sino
      estado := F
  fin
areas
  areaRecoleccion : AreaPC (10,10,10,10)
  areaDeposito : AreaPC (11,11,11,11)
  areaCoordinador : AreaP (1,1,1,1)
  a1: AreaP (9,9,9,9)
  a2: AreaP (9,10,9,10)
  a3: AreaP (9,11,9,11)
  a4: AreaP (9,12,9,12)
robots
  robot coordinador
  variables
    id:numero
    ultimo : numero
  comenzar
    EnviarMensaje(1,r1)
    EnviarMensaje(2,r2)
    EnviarMensaje(3,r3)
    EnviarMensaje(4,r4)
    repetir 4
      RecibirMensaje(id,*)
      si (id =1)
        ultimo := id
      sino  
        si (id =2)
          ultimo := id
        sino
          si (id = 3)
            ultimo := id
          sino
            ultimo := 4
    Informar(ultimo)
    si (ultimo = 1)
      EnviarMensaje(V,r1)
      EnviarMensaje(F,r2)
      EnviarMensaje(F,r3)
      EnviarMensaje(F,r4)
    sino
      si (id = 2)
        EnviarMensaje(F,r1)
        EnviarMensaje(V,r2)
        EnviarMensaje(F,r3)
        EnviarMensaje(F,r4)
      sino
        si (id = 3)
          EnviarMensaje(F,r1)
          EnviarMensaje(F,r2)
          EnviarMensaje(V,r3)
          EnviarMensaje(F,r4)
        sino
          EnviarMensaje(F,r)
          EnviarMensaje(F,r)
          EnviarMensaje(F,r)
          EnviarMensaje(V,r)
  fin
  robot recolector
  variables
    id,ai,ci:numero
    estado : boolean
  comenzar
    RecibirMensaje(id,c)
    ai := PosAv
    ci := PosCa
    estado := V
    mientras (estado)
      BloquearEsquina(10,10)
      Pos(10,10)
      recolectarFlor(estado)
      Pos(ai,ci)
      LiberarEsquina(10,10)
      si (estado)
        BloquearEsquina(11,11)
        Pos(11,11)
        depositarFlor
        Pos(ai,ci)
        LiberarEsquina(11,11)
    EnviarMensaje(id,c)
    RecibirMensaje(estado,c)
    si (estado = V)
      Pos(11,11)
      mientras(HayFlorEnLaEsquina)
        tomarFlor
  fin
variables
  c:coordinador
  r1,r2,r3,r4: recolector
comenzar
  AsignarArea(c,areaCoordinador)
  AsignarArea(r1,areaRecoleccion)
  AsignarArea(r2,areaRecoleccion)
  AsignarArea(r3,areaRecoleccion)
  AsignarArea(r4,areaRecoleccion)
  AsignarArea(r1,areaDeposito)
  AsignarArea(r2,areaDeposito)
  AsignarArea(r3,areaDeposito)
  AsignarArea(r4,areaDeposito)
  AsignarArea(r1,a1)
  AsignarArea(r2,a2)
  AsignarArea(r3,a3)
  AsignarArea(r4,a4)
  Iniciar(c,1,1)
  Iniciar(r1,9,9)
  Iniciar(r2,9,10)
  Iniciar(r3,9,11)
  Iniciar(r4,9,12)
fin

c- Analizar:
- ¿Cuál de las 2 soluciones maximiza la concurrencia?
  La solucion 2 maximiza mas la concurrencia debido a que los robots comparten las mismas probabilidades
  de tomar una flor y depositarla, de forma contraria, solo podrian tomar una flor y depositarla luego de 
  que el que estaba delante haya terminado
  La solucion B permite a los robots trabajar de forma mas pareaja
- ¿Se podría resolver este problema sin que los robots deban regresar a su esquina
inicial?
  
